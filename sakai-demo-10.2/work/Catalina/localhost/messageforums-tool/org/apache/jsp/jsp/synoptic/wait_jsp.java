/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.53
 * Generated at: 2015-06-08 03:32:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.synoptic;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import javax.faces.context.*;
import javax.faces.application.*;
import javax.faces.el.*;
import org.sakaiproject.tool.messageforums.ui.*;

public final class wait_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ff_005fview;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsakai_005fview;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fh_005finputHidden_0026_005fvalue_005fid_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ff_005fverbatim;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fh_005fgraphicImage_0026_005furl_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ff_005fview = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsakai_005fview = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fh_005finputHidden_0026_005fvalue_005fid_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ff_005fverbatim = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fh_005fgraphicImage_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ff_005fview.release();
    _005fjspx_005ftagPool_005fsakai_005fview.release();
    _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody.release();
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fh_005finputHidden_0026_005fvalue_005fid_005fnobody.release();
    _005fjspx_005ftagPool_005ff_005fverbatim.release();
    _005fjspx_005ftagPool_005fh_005fgraphicImage_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.sakaiproject.util.ResourceLoader msgs = null;
      synchronized (session) {
        msgs = (org.sakaiproject.util.ResourceLoader) _jspx_page_context.getAttribute("msgs", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (msgs == null){
          msgs = new org.sakaiproject.util.ResourceLoader();
          _jspx_page_context.setAttribute("msgs", msgs, javax.servlet.jsp.PageContext.SESSION_SCOPE);
          out.write("\n");
          out.write("   ");
          org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("msgs"), "baseName", "org.sakaiproject.api.app.messagecenter.bundle.Messages", null, null, false);
          out.write('\n');
        }
      }
      out.write('\n');
      out.write('\n');

  	String thisId = request.getParameter("panel");
  	if (thisId == null) 
  	{
    	thisId = "Main" + org.sakaiproject.tool.cover.ToolManager.getCurrentPlacement().getId();
 	}

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<script src=\"js/frameAdjust.js\" type=\"text/javascript\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/library/js/jquery/jquery-1.9.1.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\"><!--\n");
      out.write("\t/*\n");
      out.write("\t *\tTo use this, call this page with a GET parameter of \"url\"\n");
      out.write("\t *\twith the urlencoded destination page that takes a while to load\n");
      out.write("\t *\n");
      out.write("\t */\n");
      out.write("\t\n");
      out.write("\t// intervalid - id of call to progress() every 1/2 sec.\n");
      out.write("\t//\t\t\t\tPut here so can clear on unload.\n");
      out.write("\t// loading    - switch since load() done on body load\n");
      out.write("\t//\t\t\t\tand also within script (for Safari).\n");
      out.write("\tvar intervalid, index = 0;\n");
      out.write("\tvar notloading = true;\n");
      out.write("\tvar images = new Array(12);\n");
      out.write("\tvar imagesURI = new Array(12);\n");
      out.write("\t\n");
      out.write("\tfunction getEl(id) {\n");
      out.write("\t\tif (document.getElementById) {\n");
      out.write("\t\t\treturn  document.getElementById(id);\n");
      out.write("\t\t}\n");
      out.write("\t\telse if (document.all) {\n");
      out.write("\t\t\treturn document.all[id];\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t/*\n");
      out.write("\t * Determines if parameter is just a filename.\n");
      out.write("\t */\n");
      out.write("\t function isFilename(fn) {\n");
      out.write("\t \tif (fn.substring(0,5) == 'http:' || \n");
      out.write("\t \t\tfn.substring(0,6) == 'https:')\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\telse\n");
      out.write("\t\t\treturn true;\n");
      out.write("\t }\n");
      out.write("\t \t\n");
      out.write("\t/*\n");
      out.write("\t * Determines the URL to redirect to. This is determined\n");
      out.write("\t * the a GET parameter named url.\n");
      out.write("\t *\n");
      out.write("\t * NOTES: To use method 3, site name must start with 'www'.\n");
      out.write("\t *\n");
      out.write("\t * Two methods:\n");
      out.write("\t * 1. another page within site (ex: url=main)\n");
      out.write("\t * 2. an entire url (ex: url=http://www.somesite.com)\n");
      out.write("\t */\n");
      out.write("\tfunction load() {\n");
      out.write("\n");
      out.write("\t\tif (notloading) {\n");
      out.write("\t\t\tnotloading = false;\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t\t\tsetTimeout( function() {\n");
      out.write("\t\t\t\tvar urlEl = getEl(\"longPageLoad\");\n");
      out.write("\t\t\t\tvar url = urlEl.value;\n");
      out.write("\n");
      out.write("\t\t\t\t// just page name, construct url from current href\n");
      out.write("\t\t\t\tif (isFilename(url)) {\n");
      out.write("\t\t\t\t\tvar urlCurrent = window.location.href;\n");
      out.write("\t\t\t\t\tvar lastSlash = urlCurrent.lastIndexOf('/');\n");
      out.write("\n");
      out.write("\t\t\t\t\tif (lastSlash > 0) {\n");
      out.write("\t\t\t\t\t\turl = urlCurrent.substring(0, lastSlash) + '/' + url;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\telse {\n");
      out.write("\t\t\t\t\t// what to do? what to do?\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\t\t// GET parameter added so other page will know it\n");
      out.write("\t\t\t\t\t// was called by this wait page (and not from iframe)\n");
      out.write("\t\t\t\t\tlocation.href = url + \"?time=1\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}, 300);\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\tSynMainLite.setupTableParsers();\n");
      out.write("\t\t\tSynMainLite.setupTableHeaders();\n");
      out.write("\t\t\tSynMainLite.setupTableSortImageOffset();\n");
      out.write("\t\t\t//hide all checkboxes that are used to reset original values\n");
      out.write("\t\t\t$(\".unchangedValue\").hide();\n");
      out.write("\t\t\tSynMainLite.toggleHiddenRows();\n");
      out.write("\n");
      out.write("\t\t \t\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t/*\n");
      out.write("\t * Turns off the refeshing of the wait screen\n");
      out.write("\t * when actual page being loaded.\n");
      out.write("\t */\n");
      out.write("\tfunction unload() {\n");
      out.write("\t\t// turn off animation when page finished\n");
      out.write("\t\twindow.clearInterval(intervalid);\n");
      out.write("\t\tSynMainLite.setupTableParsers();\n");
      out.write("\t\tSynMainLite.setupTableHeaders();\n");
      out.write("\t\tSynMainLite.setupTableSortImageOffset();\n");
      out.write("\t\t//hide all checkboxes that are used to reset original values\n");
      out.write("\t\t$(\".unchangedValue\").hide();\n");
      out.write("\t\tSynMainLite.toggleHiddenRows();\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t/*\n");
      out.write("\t * For FF browsers, animated gif freezes when href changed,\n");
      out.write("\t * so use AJAX to get redirected page.\n");
      out.write("\t *\n");
      out.write("\t */\t\n");
      out.write("\tfunction getActualFile()\n");
      out.write("\t{\n");
      out.write("\t\tvar http;\n");
      out.write("\t\thttp = new XMLHttpRequest();\n");
      out.write("\n");
      out.write("\t\tvar urlEl = getEl(\"longPageLoad\");\n");
      out.write("\t\tvar url = urlEl.value;\n");
      out.write("\n");
      out.write("\t\t// just page name, construct url from current href\n");
      out.write("\t\tif (isFilename(url)) {\n");
      out.write("\t\t\tvar urlCurrent = window.location.href;\n");
      out.write("\t\t\tvar lastSlash = urlCurrent.lastIndexOf('/');\n");
      out.write("\n");
      out.write("\t\t\tif (lastSlash > 0) {\n");
      out.write("\t\t\t\turl = urlCurrent.substring(0, lastSlash) + '/' + url;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\telse {\n");
      out.write("\t\t\t\t// what to do? what to do?\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\t// GET parameter added so other page will know it\n");
      out.write("\t\t// was called by this wait page (and not from iframe)\n");
      out.write("\t\thttp.open(\"GET\", url + \"?time=1\", true);\n");
      out.write("\n");
      out.write("\t\thttp.onreadystatechange = function()\n");
      out.write("\t\t{\n");
      out.write("\t\t\tif (http.readyState == 4) {\n");
      out.write("    \t\t\tvar response = http.responseText; \n");
      out.write("    \t\t\tdocument.getElementById('result').innerHTML = response;\n");
      out.write("    \t\t\tadjustMainFrameHeight(self.name);\n");
      out.write(" \t       }\t \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\thttp.send(null);\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("// --></script>\n");
      out.write("</head>\n");
      out.write("\n");
      //  f:view
      com.sun.faces.taglib.jsf_core.ViewTag _jspx_th_f_005fview_005f0 = (com.sun.faces.taglib.jsf_core.ViewTag) _005fjspx_005ftagPool_005ff_005fview.get(com.sun.faces.taglib.jsf_core.ViewTag.class);
      _jspx_th_f_005fview_005f0.setPageContext(_jspx_page_context);
      _jspx_th_f_005fview_005f0.setParent(null);
      int _jspx_eval_f_005fview_005f0 = _jspx_th_f_005fview_005f0.doStartTag();
      if (_jspx_eval_f_005fview_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_f_005fview_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_f_005fview_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_f_005fview_005f0.doInitBody();
        }
        do {
          out.write('\n');
          out.write(' ');
          out.write(' ');
          //  sakai:view
          org.sakaiproject.jsf.tag.ViewTag _jspx_th_sakai_005fview_005f0 = (org.sakaiproject.jsf.tag.ViewTag) _005fjspx_005ftagPool_005fsakai_005fview.get(org.sakaiproject.jsf.tag.ViewTag.class);
          _jspx_th_sakai_005fview_005f0.setPageContext(_jspx_page_context);
          _jspx_th_sakai_005fview_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_f_005fview_005f0);
          int _jspx_eval_sakai_005fview_005f0 = _jspx_th_sakai_005fview_005f0.doStartTag();
          if (_jspx_eval_sakai_005fview_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            out.write("\n");
            out.write("  \t  <script type=\"text/javascript\" src=\"/library/js/jquery/tablesorter/2.0.3/jquery.tablesorter-2.0.3.min.js\"></script>\n");
            out.write("\t  ");
            if (_jspx_meth_sakai_005fscript_005f0(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("  \t  ");
            if (_jspx_meth_sakai_005fscript_005f1(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("  \t  <script type=\"text/javascript\">\n");
            out.write("\n");
            out.write("//this function (setupTableParsers) setting has to be in the jsp page b/c of the msgs.syn_no_messages string.\n");
            out.write("var SynMainLite = SynMainLite || {};\n");
            out.write("\n");
            out.write("SynMainLite.setupTableHeaders = function (){\n");
            out.write("\t//since f:facet only allows one tag (no nested tags either) this will set up the hyperlink (only used to\n");
            out.write("\t//make the user realize they can click the headers for sorting) to have the correct text from the msgs variable\n");
            out.write("\ttry{\n");
            out.write("\t$(\"#hideHeader\")[0].innerHTML = \"");
            if (_jspx_meth_h_005foutputText_005f0(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("\";\n");
            out.write("\t$(\"#siteHeader\")[0].innerHTML = '");
            if (_jspx_meth_h_005foutputText_005f1(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("';\n");
            out.write("\t$(\"#messagesHeader\")[0].innerHTML = '");
            if (_jspx_meth_h_005foutputText_005f2(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("';\n");
            out.write("\t$(\"#forumsHeader\")[0].innerHTML = '");
            if (_jspx_meth_h_005foutputText_005f3(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("';\n");
            out.write("\t$(\"#showOptions\")[0].innerHTML = '");
            if (_jspx_meth_h_005foutputText_005f4(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("';\n");
            out.write("\t}catch(e){\n");
            out.write("\t}\n");
            out.write("};\n");
            out.write("\n");
            out.write("\n");
            out.write("SynMainLite.setupTableParsers = function (){\n");
            out.write("\n");
            out.write("\t //add message count orderer\n");
            out.write("\t $.tablesorter.addParser({\n");
            out.write("\t        id: 'newMessageCount',\n");
            out.write("\t        is: function(s) {\n");
            out.write("\t            return false;\n");
            out.write("\t        },\n");
            out.write("\t        format: function(s) {\n");
            out.write("\t            //this is used to parse out the number of messages from the html, or \n");
            out.write("\t            //convert 'none' to the number 0, so we can order numberically\n");
            out.write("\t            return s.toLowerCase().replace('");
            if (_jspx_meth_h_005foutputText_005f5(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("',0).replace(new RegExp('</a>$'), '').replace(new RegExp('<a.*>'),'').replace(new RegExp('<img.*>'),'');           \n");
            out.write("\t        },\n");
            out.write("\t        type: \"numeric\"\n");
            out.write("\t    });  \n");
            out.write("\t //add title sorter\n");
            out.write("\t    $.tablesorter.addParser({\n");
            out.write("\t        id: 'title',\n");
            out.write("\t        is: function(s) {\n");
            out.write("\t            return false;\n");
            out.write("\t        },\n");
            out.write("\t        format: function(s) {\n");
            out.write("\t            //this is used to parse out the number of messages from the html, or \n");
            out.write("\t            //convert 'none' to the number 0, so we can order numberically\n");
            out.write("\t            return s.toLowerCase().replace(new RegExp('</a>$'), '').replace(new RegExp('<a.*>'),'');           \n");
            out.write("\t        },\n");
            out.write("\t        type: \"text\"\n");
            out.write("\t    });\n");
            out.write("\t    \n");
            out.write("\t    //add checkbox sorter\n");
            out.write("\t    $.tablesorter.addParser({\n");
            out.write("\t        id: 'checkbox',\n");
            out.write("\t        is: function(s) {\n");
            out.write("\t            return false;\n");
            out.write("\t        },\n");
            out.write("\t        format: function(s) {\n");
            out.write("\t            var integer = 0;\n");
            out.write("\t            if (s.toLowerCase().match(/<input[^>]*checked*/i)) {\n");
            out.write("\t                integer = 1;\n");
            out.write("\t            }\n");
            out.write("\t            return integer;\n");
            out.write("\t        },\n");
            out.write("\t        type: \"numeric\"\n");
            out.write("\t    }); \n");
            out.write("\t    \n");
            out.write("\t    //apply orderers to workspaceTable\n");
            out.write("\t    $(\".workspaceTable\").tablesorter({ \n");
            out.write("\t\t    \n");
            out.write("\t        headers: {\n");
            out.write("\t    \t0: { \n");
            out.write("\t    \t    sorter:'checkbox' \n");
            out.write("\t    \t},\n");
            out.write("\t    \t1: { \n");
            out.write("\t \t       sorter:'title' \n");
            out.write("\t    \t}, \n");
            out.write("\t    \t2: { \n");
            out.write("\t\t        sorter:'newMessageCount' \n");
            out.write("\t\t    }, \n");
            out.write("\t        3: { \n");
            out.write("\t            sorter:'newMessageCount' \n");
            out.write("\t        } \n");
            out.write("\t        } \n");
            out.write("\t    });\n");
            out.write("\n");
            out.write("\t};\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("\n");
            out.write("\tfunction resize(){\n");
            out.write("\t\tmySetMainFrameHeightViewCell('");
            out.print( org.sakaiproject.util.Web.escapeJavascript(thisId));
            out.write("');\n");
            out.write("\t}\n");
            out.write("\t\n");
            out.write("\t\n");
            out.write("function mySetMainFrameHeightViewCell(id)\n");
            out.write("{\n");
            out.write("\t// run the script only if this window's name matches the id parameter\n");
            out.write("\t// this tells us that the iframe in parent by the name of 'id' is the one who spawned us\n");
            out.write("\tif (typeof window.name != \"undefined\" && id != window.name) return;\n");
            out.write("\n");
            out.write("\tvar frame = parent.document.getElementById(id);\n");
            out.write("\tif (frame)\n");
            out.write("\t{\n");
            out.write("\n");
            out.write("\t\tvar objToResize = (frame.style) ? frame.style : frame;\n");
            out.write("  \n");
            out.write("    // SAK-11014 revert           if ( false ) {\n");
            out.write("\n");
            out.write("\t\tvar height; \t\t\n");
            out.write("\t\tvar offsetH = document.body.offsetHeight;\n");
            out.write("\t\tvar innerDocScrollH = null;\n");
            out.write("\n");
            out.write("\t\tif (typeof(frame.contentDocument) != 'undefined' || typeof(frame.contentWindow) != 'undefined')\n");
            out.write("\t\t{\n");
            out.write("\t\t\t// very special way to get the height from IE on Windows!\n");
            out.write("\t\t\t// note that the above special way of testing for undefined variables is necessary for older browsers\n");
            out.write("\t\t\t// (IE 5.5 Mac) to not choke on the undefined variables.\n");
            out.write(" \t\t\tvar innerDoc = (frame.contentDocument) ? frame.contentDocument : frame.contentWindow.document;\n");
            out.write("\t\t\tinnerDocScrollH = (innerDoc != null) ? innerDoc.body.scrollHeight : null;\n");
            out.write("\t\t}\n");
            out.write("\t\n");
            out.write("\t\tif (document.all && innerDocScrollH != null)\n");
            out.write("\t\t{\n");
            out.write("\t\t\t// IE on Windows only\n");
            out.write("\t\t\theight = innerDocScrollH;\n");
            out.write("\t\t}\n");
            out.write("\t\telse\n");
            out.write("\t\t{\n");
            out.write("\t\t\t// every other browser!\n");
            out.write("\t\t\theight = offsetH;\n");
            out.write("\t\t}\n");
            out.write("   // SAK-11014 revert\t\t} \n");
            out.write("\n");
            out.write("   // SAK-11014 revert             var height = getFrameHeight(frame);\n");
            out.write("\n");
            out.write("\t\t// here we fudge to get a little bigger\n");
            out.write("\t\tvar newHeight = height + 40;\n");
            out.write("\n");
            out.write("\t\t// but not too big!\n");
            out.write("\t\tif (newHeight > 32760) newHeight = 32760;\n");
            out.write("\n");
            out.write("\t\t// capture my current scroll position\n");
            out.write("\t\tvar scroll = findScroll();\n");
            out.write("\n");
            out.write("\t\t// resize parent frame (this resets the scroll as well)\n");
            out.write("\t\tobjToResize.height=newHeight + \"px\";\n");
            out.write("\n");
            out.write("\t\t// reset the scroll, unless it was y=0)\n");
            out.write("\t\tif (scroll[1] > 0)\n");
            out.write("\t\t{\n");
            out.write("\t\t\tvar position = findPosition(frame);\n");
            out.write("\t\t\tparent.window.scrollTo(position[0]+scroll[0], position[1]+scroll[1]);\n");
            out.write("\t\t}\n");
            out.write("\t}\n");
            out.write("}\n");
            out.write("</script> \n");
            out.write("  \n");
            out.write("  \t");
            out.write("\n");
            out.write("    ");
            if (_jspx_meth_h_005finputHidden_005f0(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write('\n');
            out.write('\n');
            out.write('	');
            out.write('\n');
            out.write('	');
            if (_jspx_meth_f_005fverbatim_005f0(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write('\n');
            out.write('\n');
  
  /* if MyWorkspace, display wait gif and message. if not, just redirect to synMain. */
  FacesContext context = FacesContext.getCurrentInstance();
  Application app = context.getApplication();
  ValueBinding binding = app.createValueBinding("#{mfSynopticBeanLite}");
  MessageForumSynopticBeanLite mfsb = (MessageForumSynopticBeanLite) binding.getValue(context);
  
  if (mfsb.isMyWorkspace() && mfsb.isDisableMyWorkspace().booleanValue()){
	  if(mfsb.getDisableMyWorkspaceDisabledMessage() != null && !"".equals(mfsb.getDisableMyWorkspaceDisabledMessage())){

            out.write("\t  \n");
            out.write("\t\t");
            if (_jspx_meth_h_005foutputText_005f6(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write('\n');
	  
	  }else{

            out.write('\n');
            out.write('	');
            out.write('	');
            if (_jspx_meth_h_005foutputText_005f7(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("\t\t  \n");

	  }
  }else if (mfsb.isMyWorkspace() && mfsb.isUserRequestSynoptic().booleanValue()){

            out.write("\n");
            out.write("<div>\n");
            out.write("<br>\n");
            if (_jspx_meth_h_005fgraphicImage_005f0(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("&nbsp;<a href=\"#\" onclick=\"load();\">");
            if (_jspx_meth_h_005foutputText_005f8(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("</a>\n");
            out.write("</div>\n");
 
	}else{

            out.write("\n");
            out.write("\t\n");
            out.write("\t<script type=\"text/javascript\"> \n");
            out.write("\t// Call javascript function to grab actual long loading page\n");
            out.write("\tload();\n");
            out.write("\t</script>\n");


   }

            out.write('\n');
            out.write(' ');
            out.write(' ');
            if (_jspx_meth_f_005fverbatim_005f1(_jspx_th_sakai_005fview_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("\n");
            out.write("  ");
          }
          if (_jspx_th_sakai_005fview_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            _005fjspx_005ftagPool_005fsakai_005fview.reuse(_jspx_th_sakai_005fview_005f0);
            return;
          }
          _005fjspx_005ftagPool_005fsakai_005fview.reuse(_jspx_th_sakai_005fview_005f0);
          out.write('\n');
          int evalDoAfterBody = _jspx_th_f_005fview_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_f_005fview_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_f_005fview_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005ff_005fview.reuse(_jspx_th_f_005fview_005f0);
        return;
      }
      _005fjspx_005ftagPool_005ff_005fview.reuse(_jspx_th_f_005fview_005f0);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_sakai_005fscript_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sakai:script
    org.sakaiproject.jsf.tag.ScriptTag _jspx_th_sakai_005fscript_005f0 = (org.sakaiproject.jsf.tag.ScriptTag) _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody.get(org.sakaiproject.jsf.tag.ScriptTag.class);
    _jspx_th_sakai_005fscript_005f0.setPageContext(_jspx_page_context);
    _jspx_th_sakai_005fscript_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(176,3) name = contextBase type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_sakai_005fscript_005f0.setContextBase("/messageforums-tool");
    // /jsp/synoptic/wait.jsp(176,3) name = path type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_sakai_005fscript_005f0.setPath("/js/synopticLite.js");
    int _jspx_eval_sakai_005fscript_005f0 = _jspx_th_sakai_005fscript_005f0.doStartTag();
    if (_jspx_th_sakai_005fscript_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody.reuse(_jspx_th_sakai_005fscript_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody.reuse(_jspx_th_sakai_005fscript_005f0);
    return false;
  }

  private boolean _jspx_meth_sakai_005fscript_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sakai:script
    org.sakaiproject.jsf.tag.ScriptTag _jspx_th_sakai_005fscript_005f1 = (org.sakaiproject.jsf.tag.ScriptTag) _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody.get(org.sakaiproject.jsf.tag.ScriptTag.class);
    _jspx_th_sakai_005fscript_005f1.setPageContext(_jspx_page_context);
    _jspx_th_sakai_005fscript_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(177,5) name = contextBase type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_sakai_005fscript_005f1.setContextBase("/messageforums-tool");
    // /jsp/synoptic/wait.jsp(177,5) name = path type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_sakai_005fscript_005f1.setPath("/js/popupscripts.js");
    int _jspx_eval_sakai_005fscript_005f1 = _jspx_th_sakai_005fscript_005f1.doStartTag();
    if (_jspx_th_sakai_005fscript_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody.reuse(_jspx_th_sakai_005fscript_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fsakai_005fscript_0026_005fpath_005fcontextBase_005fnobody.reuse(_jspx_th_sakai_005fscript_005f1);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f0 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f0.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(187,34) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f0.setValue("#{msgs.syn_hide}");
    int _jspx_eval_h_005foutputText_005f0 = _jspx_th_h_005foutputText_005f0.doStartTag();
    if (_jspx_th_h_005foutputText_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f0);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f1 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f1.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(188,34) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f1.setValue("#{msgs.syn_site_heading}");
    int _jspx_eval_h_005foutputText_005f1 = _jspx_th_h_005foutputText_005f1.doStartTag();
    if (_jspx_th_h_005foutputText_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f1);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f2 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f2.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(189,38) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f2.setValue("#{msgs.syn_private_heading}");
    int _jspx_eval_h_005foutputText_005f2 = _jspx_th_h_005foutputText_005f2.doStartTag();
    if (_jspx_th_h_005foutputText_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f2);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f3 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f3.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(190,36) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f3.setValue("#{msgs.syn_discussion_heading}");
    int _jspx_eval_h_005foutputText_005f3 = _jspx_th_h_005foutputText_005f3.doStartTag();
    if (_jspx_th_h_005foutputText_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f3);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f4 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f4.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(191,35) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f4.setValue("#{msgs.syn_options}");
    int _jspx_eval_h_005foutputText_005f4 = _jspx_th_h_005foutputText_005f4.doStartTag();
    if (_jspx_th_h_005foutputText_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f4);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f5 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f5.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(208,45) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f5.setValue("#{msgs.syn_no_messages}");
    int _jspx_eval_h_005foutputText_005f5 = _jspx_th_h_005foutputText_005f5.doStartTag();
    if (_jspx_th_h_005foutputText_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f5);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f5);
    return false;
  }

  private boolean _jspx_meth_h_005finputHidden_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:inputHidden
    com.sun.faces.taglib.html_basic.InputHiddenTag _jspx_th_h_005finputHidden_005f0 = (com.sun.faces.taglib.html_basic.InputHiddenTag) _005fjspx_005ftagPool_005fh_005finputHidden_0026_005fvalue_005fid_005fnobody.get(com.sun.faces.taglib.html_basic.InputHiddenTag.class);
    _jspx_th_h_005finputHidden_005f0.setPageContext(_jspx_page_context);
    _jspx_th_h_005finputHidden_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(338,4) name = id type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005finputHidden_005f0.setId("longPageLoad");
    // /jsp/synoptic/wait.jsp(338,4) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005finputHidden_005f0.setValue("synMainLite");
    int _jspx_eval_h_005finputHidden_005f0 = _jspx_th_h_005finputHidden_005f0.doStartTag();
    if (_jspx_th_h_005finputHidden_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005finputHidden_0026_005fvalue_005fid_005fnobody.reuse(_jspx_th_h_005finputHidden_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005finputHidden_0026_005fvalue_005fid_005fnobody.reuse(_jspx_th_h_005finputHidden_005f0);
    return false;
  }

  private boolean _jspx_meth_f_005fverbatim_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  f:verbatim
    com.sun.faces.taglib.jsf_core.VerbatimTag _jspx_th_f_005fverbatim_005f0 = (com.sun.faces.taglib.jsf_core.VerbatimTag) _005fjspx_005ftagPool_005ff_005fverbatim.get(com.sun.faces.taglib.jsf_core.VerbatimTag.class);
    _jspx_th_f_005fverbatim_005f0.setPageContext(_jspx_page_context);
    _jspx_th_f_005fverbatim_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    int _jspx_eval_f_005fverbatim_005f0 = _jspx_th_f_005fverbatim_005f0.doStartTag();
    if (_jspx_eval_f_005fverbatim_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_f_005fverbatim_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_f_005fverbatim_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_f_005fverbatim_005f0.doInitBody();
      }
      do {
        out.write("<div id=\"result\">");
        int evalDoAfterBody = _jspx_th_f_005fverbatim_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_f_005fverbatim_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_f_005fverbatim_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ff_005fverbatim.reuse(_jspx_th_f_005fverbatim_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ff_005fverbatim.reuse(_jspx_th_f_005fverbatim_005f0);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f6 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f6.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(354,2) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f6.setValue("#{mfSynopticBeanLite.disableMyWorkspaceDisabledMessage}");
    int _jspx_eval_h_005foutputText_005f6 = _jspx_th_h_005foutputText_005f6.doStartTag();
    if (_jspx_th_h_005foutputText_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f6);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f6);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f7 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f7.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(358,2) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f7.setValue("#{msgs.synopticToolDisabled}");
    int _jspx_eval_h_005foutputText_005f7 = _jspx_th_h_005foutputText_005f7.doStartTag();
    if (_jspx_th_h_005foutputText_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f7);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f7);
    return false;
  }

  private boolean _jspx_meth_h_005fgraphicImage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:graphicImage
    com.sun.faces.taglib.html_basic.GraphicImageTag _jspx_th_h_005fgraphicImage_005f0 = (com.sun.faces.taglib.html_basic.GraphicImageTag) _005fjspx_005ftagPool_005fh_005fgraphicImage_0026_005furl_005fnobody.get(com.sun.faces.taglib.html_basic.GraphicImageTag.class);
    _jspx_th_h_005fgraphicImage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_h_005fgraphicImage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(365,0) name = url type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005fgraphicImage_005f0.setUrl("#{mfSynopticBeanLite.serverUrl}/library/image/silk/email.png");
    int _jspx_eval_h_005fgraphicImage_005f0 = _jspx_th_h_005fgraphicImage_005f0.doStartTag();
    if (_jspx_th_h_005fgraphicImage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005fgraphicImage_0026_005furl_005fnobody.reuse(_jspx_th_h_005fgraphicImage_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005fgraphicImage_0026_005furl_005fnobody.reuse(_jspx_th_h_005fgraphicImage_005f0);
    return false;
  }

  private boolean _jspx_meth_h_005foutputText_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  h:outputText
    com.sun.faces.taglib.html_basic.OutputTextTag _jspx_th_h_005foutputText_005f8 = (com.sun.faces.taglib.html_basic.OutputTextTag) _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.get(com.sun.faces.taglib.html_basic.OutputTextTag.class);
    _jspx_th_h_005foutputText_005f8.setPageContext(_jspx_page_context);
    _jspx_th_h_005foutputText_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    // /jsp/synoptic/wait.jsp(366,36) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_h_005foutputText_005f8.setValue("#{msgs.viewSynopticInfo}");
    int _jspx_eval_h_005foutputText_005f8 = _jspx_th_h_005foutputText_005f8.doStartTag();
    if (_jspx_th_h_005foutputText_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f8);
      return true;
    }
    _005fjspx_005ftagPool_005fh_005foutputText_0026_005fvalue_005fnobody.reuse(_jspx_th_h_005foutputText_005f8);
    return false;
  }

  private boolean _jspx_meth_f_005fverbatim_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_sakai_005fview_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  f:verbatim
    com.sun.faces.taglib.jsf_core.VerbatimTag _jspx_th_f_005fverbatim_005f1 = (com.sun.faces.taglib.jsf_core.VerbatimTag) _005fjspx_005ftagPool_005ff_005fverbatim.get(com.sun.faces.taglib.jsf_core.VerbatimTag.class);
    _jspx_th_f_005fverbatim_005f1.setPageContext(_jspx_page_context);
    _jspx_th_f_005fverbatim_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sakai_005fview_005f0);
    int _jspx_eval_f_005fverbatim_005f1 = _jspx_th_f_005fverbatim_005f1.doStartTag();
    if (_jspx_eval_f_005fverbatim_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_f_005fverbatim_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_f_005fverbatim_005f1.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_f_005fverbatim_005f1.doInitBody();
      }
      do {
        out.write("</div>");
        int evalDoAfterBody = _jspx_th_f_005fverbatim_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_f_005fverbatim_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_f_005fverbatim_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ff_005fverbatim.reuse(_jspx_th_f_005fverbatim_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005ff_005fverbatim.reuse(_jspx_th_f_005fverbatim_005f1);
    return false;
  }
}
